#! /usr/bin/env python
# encoding: utf-8

import re
import sys
from waflib.TaskGen import feature

@feature('configure')
def configure_config(self):
	srcpath = self.srcpath
	self.bld(rule=' cd ' + srcpath + ' && ./configure --enable-static --disable-shared --disable-docs --disable-examples --disable-oggtest --with-ogg-includes=' + srcpath + '/../ogg/include')
	self.source= []

def configure(conf):
	path = conf.path.abspath()
	
	# execute configure
	conf.check_cxx(features='configure', msg='config vorbis', srcpath=path)
	
	# store Makefile path
	conf.env.VORBIS_MAKEPATH = path
	
	# add include to env
	conf.env.append_unique('INCLUDES', path + '/include')

def build(bld):
	# make (force run)
	taskgen_make = bld(rule='make --directory=' + bld.env.VORBIS_MAKEPATH, name='vorbis_make', always=True)
	taskgen_make.post()
	task_make = taskgen_make.tasks[0]
	task_make.run()
	
	bld.read_stlib('vorbis', paths = [bld.env.VORBIS_MAKEPATH + '/lib/.libs'])

